.TH deepsea 7
.SH NAME
DeepSea customization
.SH DESCRIPTION
.B SLS 
is short for Salt State Files. Those files are used to define a state you wish a node to be in.
DeepSea has the concept of a 'default' file that will be executed when you invoke a salt state.
For example when you want to execute a refresh on the pillar you do,

.B salt -G 'deepsea:*' state.apply ceph.refresh

internally this looks in

.B /srv/salt/ceph/refresh/init.sls

include:
  - .{{ salt['pillar.get']('refresh_init', 'default') }}

which looks for a value of 'refresh_init' in the pillar. When it's not found it defaults to the name 'default' 
which is the name of the file in the directory. (Ignore the file extension)

.B /srv/salt/ceph/refresh/default.sls

refresh_pillar:
  module.run:
    - name: saltutil.refresh_pillar

This advises salt to to execute the 
.B module: saltutil 

which with it's function 

.B refresh_pillar

If you, for any reason, want to change this behavior. You can add a file to 

.B /srv/salt/ceph/refresh

called 

.B custom.sls

and fill it with your desired module.

In order to get your custom state loaded instead of the default one, you have to change the 

.B refresh_init 

value by editing

.B /srv/pillar/ceph/stack/global.yml

with

.B refresh_init: custom

To try it:

.B salt -G 'deepsea:*' state.apply ceph.refresh

will now load your custom.sls.

.SH More examples


DeepSea ships a number of non-default states that can be used.
For example we offer alternating stage.0s which 
have either updates or reboots (or both) enabled.

To apply those you'd have to add 

.B stage_prep_minion: default-no-update-no-reboot

.B stage_prep_master: default-no-update-no-reboot

to 

.B /srv/pillar/ceph/stack/global.yml

To find all alternating files for the stages go into 

.B /srv/salt/ceph/stage/{0..5}/

.SH AUTHOR
Joshua Schmid <jschmid@suse.com>
.SH SEE ALSO
.BR deepsea (1),
.BR deepsea (7),
